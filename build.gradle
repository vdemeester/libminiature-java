plugins {
    id "com.jfrog.bintray" version "1.1"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = 'com.github.vdemeester'
version = '0.3.0'

dependencies {
    // Compile
    compile 'org.springframework:spring-web:4.1.6.RELEASE'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.3'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.4.0'
    compile 'com.google.guava:guava:18.0'
    compile 'com.typesafe:config:1.3.0'
    compile 'org.slf4j:slf4j-api:1.7.2'
    // Tests
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.0.0'
    testCompile 'org.springframework:spring-test:4.1.6.RELEASE'
}

repositories {
    mavenCentral()
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar
        }
    }
    publishing.publications.all {
        pom.withXml {
            asNode().dependencies.'*'.findAll() {
                it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                    dep.name == it.artifactId.text()
                }
            }.each { it.scope*.value = 'compile'}
        }
    }
}

bintray {
    user = bintray_user //this usually comes from gradle.properties file in ~/.gradle
    key = bintray_api_key //this usually comes from gradle.properties file in ~/.gradle

    publications = ['mavenJava'] //When uploading Maven-based publication files

    dryRun = false //Whether to run this as dry-run, without deploying
    publish = true //If version should be auto published after an upload

    pkg {
        repo = 'maven'
        group = project.group
        name =  project.name
        desc = 'libminiature-java'
        websiteUrl = 'https://github.com/vdemeester/libminiature-java'
        issueTrackerUrl = 'https://github.com/vdemeester/libminiature-java/issues'
        vcsUrl = 'https://github.com/vdemeester/libminiature-java'
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true
//        attributes = ['a': ['ay1', 'ay2'], 'b': ['bee'], c: 'cee'] //Optional package-level attributes
        //Optional version descriptor
        version {
            name = project.version //Bintray logical version name
//            desc = 'optional, version-specific description'
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
